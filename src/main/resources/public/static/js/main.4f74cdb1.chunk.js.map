{"version":3,"sources":["select/components.js","lookup/components.js","chart/components.js","App.js","index.js"],"names":["functions","value","label","SelectOption","props","option","setOption","options","onChange","selectedOption","ApiLookup","function_","empresa","callback","fetch","then","response","json","data","MultiAxisLine","className","App","useState","setData","console","log","set","Object","keys","labelsColors","dates","sort","datasets","forEach","element","date","push","fill","backgroundColor","borderColor","labels","onSubmit","event","preventDefault","lookup","target","elements","type","name","defaultValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLAGaA,EAAa,CACtB,CAACC,MAAO,MAAOC,MAAO,gBACtB,CAACD,MAAO,WAAYC,MAAO,mBAC3B,CAACD,MAAO,OAAQC,MAAO,iBACvB,CAACD,MAAO,QAASC,MAAO,mBAGrB,SAASC,EAAaC,GACzB,IAAOC,EAAoBD,EAApBC,OAAOC,EAAaF,EAAbE,UAMd,OAAO,cAAC,IAAD,CAAQC,QAAUP,EAAWQ,SAJhB,SAAAC,GAChBH,EAAUG,IAG8CR,MAAOI,I,kBChB1DK,EAAb,2FACI,SAAcC,EAAUC,EAAQC,GAC5BC,MAAM,sDAAD,OAAuDH,EAAvD,oBAA4EC,IAChFG,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAI,OAAEL,EAASK,UAJ7B,K,QCEO,SAASC,EAAcf,GAC5B,OAAO,gCACL,qBAAKgB,UAAU,SAAf,SACE,oBAAIA,UAAU,QAAd,0BAEF,cAAC,IAAD,CAAMF,KAAMd,EAAMc,UCsDPG,MAxDf,WACE,MAA2BC,mBAAS,MAApC,mBAAOjB,EAAP,KAAcC,EAAd,KACA,EAAuBgB,mBAAS,MAAhC,mBAAOJ,EAAP,KAAYK,EAAZ,KACMV,EAAW,SAACG,GAChBQ,QAAQC,IAAIT,GACZ,IAAMU,EAAIV,EAASW,OAAOC,KAAKZ,GAAU,IAEnCa,EAAa,CACjB,UAAU,gBACV,UAAU,eACV,SAAS,eACT,WAAW,mBAEPC,EAAQH,OAAOC,KAAKF,GAAKK,OAC3BC,EAAW,GARA,CAAC,UAAU,UAAU,SAAS,YAStCC,SAAQ,SAAAC,GACb,IAAIhB,EAAO,GACXY,EAAMG,SAAQ,SAAAE,GACZjB,EAAKkB,KAAKV,EAAIS,GAAMD,OAEtBF,EAASI,KAAK,CACZlC,MAAOgC,EACPhB,KAAMA,EACNmB,MAAM,EACNC,gBAAgB,GAAD,OAAKT,EAAaK,GAAlB,KACfK,YAAY,GAAD,OAAKV,EAAaK,GAAlB,cAGfV,QAAQC,IAAI,WACZD,QAAQC,IAAIO,GACZT,EAAQ,CACNiB,OAAOV,EACPE,SAASA,KASb,OAAO,gCACL,uBAAMS,SANa,SAACC,GACpBA,EAAMC,iBACNjC,EAAUkC,OAAOvC,EAAOJ,MAAMyC,EAAMG,OAAOC,SAAS,GAAG7C,MAAMY,IAI7D,sBACW,uBACT,cAACV,EAAD,CAAcE,OAAQA,EAAQC,UAAWA,IAF3C,WAGU,uBACR,uBAAOyC,KAAK,OAAOC,KAAK,UAAUC,aAAa,OAJjD,IAIyD,uBAAM,uBAC7D,uBAAOF,KAAK,SAAS9C,MAAM,cAG7B,8BACGiB,EAAK,cAACC,EAAD,CAAeD,KAAMA,IAAS,WCnD1CgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.4f74cdb1.chunk.js","sourcesContent":["import React from 'react';\r\nimport Select from 'react-select';\r\n\r\nexport const functions  = [\r\n    {value: 'day', label: 'Daily values'},\r\n    {value: 'intraDay', label: 'Intraday values'},\r\n    {value: 'week', label: 'Weekly values'},\r\n    {value: 'month', label: 'Monthly values'},\r\n];\r\n\r\nexport function SelectOption(props){\r\n    const {option,setOption} = props\r\n\r\n    const handleChange= selectedOption =>{\r\n        setOption(selectedOption)\r\n    }\r\n\r\n    return <Select options= {functions} onChange={handleChange} value={option}/>\r\n}","//\r\nexport class ApiLookup{\r\n    static lookup(function_,empresa,callback){\r\n        fetch(`https://sparkliveone.herokuapp.com/facade?function=${function_}&empresa=${empresa}`)\r\n        .then(response=>response.json())\r\n        .then(data=>callback(data))\r\n    }\r\n}","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nexport function MultiAxisLine(props){\r\n  return <div>\r\n    <div className='header'>\r\n      <h1 className='title'>Line Chart</h1>\r\n    </div>\r\n    <Line data={props.data} />\r\n  </div>\r\n}","import { useState } from 'react';\nimport './App.css';\nimport {SelectOption} from './select'\nimport {ApiLookup} from './lookup'\nimport {MultiAxisLine} from './chart'\n\nfunction App() {\n  const [option,setOption] = useState(null)\n  const [data,setData] = useState(null)\n  const callback = (response)=>{\n    console.log(response);\n    const set=response[Object.keys(response)[0]]\n    const labels = ['1. open','2. high','3. low','4. close']\n    const labelsColors={\n      '1. open':'rgb(100,30,22',\n      '2. high':'rgb(21,67,96',\n      '3. low':'rgb(11,83,69',\n      '4. close':'rgb(123,125,125'\n    }\n    const dates = Object.keys(set).sort()\n    var datasets = []\n    labels.forEach(element=>{\n      var data = []\n      dates.forEach(date=>{\n        data.push(set[date][element])\n      })\n      datasets.push({\n        label: element,\n        data: data,\n        fill: false,\n        backgroundColor: `${labelsColors[element]})`,\n        borderColor: `${labelsColors[element]},0.5)`,\n      })\n    })\n    console.log(\"dataSet\");\n    console.log(datasets)\n    setData({\n      labels:dates,\n      datasets:datasets\n    })\n  }\n\n  const handleSubmit = (event)=>{\n    event.preventDefault()\n    ApiLookup.lookup(option.value,event.target.elements[1].value,callback)\n  }\n\n  return <div>\n    <form onSubmit={handleSubmit}>\n      function:<br />\n      <SelectOption option={option} setOption={setOption}/>\n      empresa:<br />\n      <input type=\"text\" name=\"empresa\" defaultValue=\"fb\" /> <br /><br />\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n\n    <div>\n      {data?<MultiAxisLine data={data} />:null}\n    </div>\n  </div>\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}